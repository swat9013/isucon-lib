# [tmm1/stackprof: a sampling call-stack profiler for ruby 2.2+](https://github.com/tmm1/stackprof)
# ,[fusic/estackprof: Estackprof is a wrapper to make it easier to use Stackprof in your rack application.](https://github.com/fusic/estackprof)

# gemfile
gem 'estackprof'

bundle install

# command
estackprof top -p app.rb
estackprof list -f app.rb

# app.rb
require 'estackprof'

...
module xxxx
  class App < Sinatra::Base
    # profile
    use Estackprof::Middleware

    # logging
    enable :logging
    Dir.mkdir("log") unless File.exist?("log")
    access_log = File.new("log/access.log","a+")
    access_log.sync = true
    use Rack::CommonLogger, access_log

    app_log = File.new("log/application.log", "a+")
    app_log.sync = true
    app_logger = Logger.new(app_log)

    curl_logger = Logger.new('log/curl.log')

    before do
      env["rack.logger"] = app_logger

      # テスト作成用
      # リクエストヘッダーの取得
      http_headers = request.env.select { |k, v| k.start_with?('HTTP_') }

      # cURL形式でログ出力
      curl_command = ["curl -X #{request.request_method}"]

      # # ヘッダーの追加
      # http_headers.each do |k, v|
      #   header_name = k.sub('HTTP_', '').split('_').map(&:capitalize).join('-')
      #   curl_command << "-H '#{header_name}: #{v}'"
      # end

      # cookieがドメイン指定されている場合に必要
      curl_command << "--resolve '#{http_headers['HTTP_HOST']}:8080:127.0.0.1'"

      curl_command << "-b cookie.txt -c cookie.txt"
      # POSTデータの追加
      if request.post?
        curl_command << "-d '#{request.body.read}'"
        request.body.rewind
      end

      # URLの追加
      curl_command << "'#{request.url}'"

      # ログに出力
      # curl_logger.info "Request Headers: #{http_headers}"
      curl_logger.info "#{curl_command.join(' ')}"
      # curl_logger.info "Parameters: #{params}"
    end
...
  error HttpError do
    ...
    logger.error(e)
    ...



